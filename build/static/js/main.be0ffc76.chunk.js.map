{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","components/common/pagination.jsx","components/listGroup.jsx","services/genreService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","services/authService.js","components/moviesTable.jsx","components/newmovie.jsx","components/common/search.jsx","components/movies.jsx","components/utils/pagination.js","components/customers.jsx","components/rentals.jsx","components/common/header.jsx","components/notfound.jsx","components/logout.jsx","components/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/loginForm.jsx","components/movieforms.jsx","components/register.jsx","App.js","serviceWorker.js","index.js"],"names":["init","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","log","error","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","getMovies","http","deleteMovie","movie","_id","getMovie","movieId","saveMovie","body","Pagination","props","itemCount","pageSize","onPageChange","currentPage","page","Math","ceil","pages","_","range","aria-label","className","map","key","onClick","ListGroup","items","selectedGenre","onItemSelect","a","name","getGenres","Like","state","classes","this","liked","style","cursor","Component","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","aria-hidden","label","TableBody","renderCell","item","col","content","data","register","users","email","password","username","login","localStorage","setItem","removeItem","getCurrentUser","getItem","jwtDecode","ex","loginWithJwt","MoviesTable","to","title","onLike","authService","onDelete","movies","NewMovies","user","console","SearchInput","onChange","value","htmlFor","e","currentTarget","type","id","Movies","search","originalMovie","result","filter","setState","movieService","handleLike","index","indexOf","handlePageChange","handleGenreSelect","g","handleSort","handleChange","genre","genres","count","length","allMovies","filtered","m","toLowerCase","startsWith","startIndex","slice","take","pagination","orderBy","Customers","Rental","Header","Notfound","Logout","window","location","Navbar","data-toggle","data-target","aria-controls","aria-expanded","Fragment","Input","aria-describedby","Select","options","rest","option","Forms","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","errorMessage","renderButton","disabled","renderSelect","renderInput","LoginForm","string","required","min","from","pathname","onSubmit","MoviesForm","numberInStock","dailyRentalRate","genreId","number","integer","max","errors","match","params","history","replace","mapToViewModel","push","movieDb","find","Register","App","render","component","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.be0ffc76.chunk.js","sourcesContent":["import * as Sentry from \"@sentry/react\";\r\nimport { Integrations } from \"@sentry/tracing\";\r\n\r\nfunction init() {\r\n  Sentry.init({\r\n    dsn:\r\n      \"https://a391c71f76fc4a1e892fe3621faa9b13@o438873.ingest.sentry.io/5410673\",\r\n    integrations: [new Integrations.BrowserTracing()],\r\n    tracesSampleRate: 1.0,\r\n  });\r\n}\r\n\r\nfunction log(error) {\r\n  Sentry.captureException(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log,\r\n};\r\n","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { React } from \"react\";\r\n\r\n//axios.defaults.headers.common[\"x-auth-token\"] = auth.getJwt();\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    logger.log(\"Log error\", error);\r\n    toast.error(\"Unexpected error\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport function setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n};\r\n","import http from \"./httpService\";\r\n//import { apiUrl } from \"../../src/config.json\";\r\n\r\nexport function getMovies() {\r\n  return http.get(\"/movies\");\r\n}\r\n\r\nexport function deleteMovie(movie) {\r\n  return http.delete(\"/movies\" + \"/\" + movie._id);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(\"/movies\" + \"/\" + movieId);\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  const body = { ...movie };\r\n  delete body._id;\r\n\r\n  if (movie._id) {\r\n    return http.put(\"/movies\" + \"/\" + movie._id, body);\r\n  } else {\r\n    return http.post(\"/movies\", body);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst Pagination = (props) => {\r\n  const { itemCount, pageSize, onPageChange, currentPage } = props;\r\n\r\n  let page = itemCount / pageSize;\r\n\r\n  page = Math.ceil(page);\r\n\r\n  if (page === 1) return null;\r\n\r\n  const pages = _.range(1, page + 1);\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => {\r\n          return (\r\n            <li\r\n              key={page}\r\n              className={\r\n                page === currentPage ? \"page-item active\" : \"page-item\"\r\n              }>\r\n              <a onClick={() => onPageChange(page)} className=\"page-link\">\r\n                {page}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemCount: propTypes.number.isRequired,\r\n  pageSize: propTypes.number.isRequired,\r\n  onPageChange: propTypes.func.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = (props) => {\r\n  const { items, selectedGenre, onItemSelect } = props;\r\n  return (\r\n    <div>\r\n      <ul className=\"list-group\">\r\n        {items.map((a) => {\r\n          return (\r\n            <li\r\n              key={a._id}\r\n              onClick={() => onItemSelect(a)}\r\n              className={\r\n                a.name === selectedGenre.name\r\n                  ? \"list-group-item active\"\r\n                  : \"list-group-item \"\r\n              }>\r\n              {a.name}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListGroup;\r\n","import http from \"./httpService\";\r\n//import { apiUrl } from \"../../src/config.json\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Like extends Component {\r\n  state = {};\r\n  render() {\r\n    let classes = \"fa fa-heart\";\r\n    if (!this.props.liked) {\r\n      classes += \"-o\";\r\n    }\r\n    return (\r\n      <i\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={this.props.onClick}\r\n        className={classes}></i>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    if (this.props.sortColumn.path === column.path) {\r\n      if (this.props.sortColumn.order === \"asc\") {\r\n        return <i className=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>;\r\n      } else if (this.props.sortColumn.order === \"desc\") {\r\n        return <i className=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.column.map((column) => {\r\n            return (\r\n              <th\r\n                style={{ cursor: \"pointer\" }}\r\n                key={column.path || column.key}\r\n                onClick={() => this.raiseSort(column.path)}>\r\n                {column.label} {this.renderSortIcon(column)}\r\n              </th>\r\n            );\r\n          })}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\n//import { NavLink, Link, Route } from \"react-router-dom\";\r\n//import Like from \"../common/like\";\r\n//import Header from \"./header\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, col) => {\r\n    if (col.content) return col.content(item);\r\n\r\n    return _.get(item, col.path);\r\n  };\r\n\r\n  render() {\r\n    const { data, column } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => {\r\n          return (\r\n            <tr key={item._id}>\r\n              {column.map((col) => {\r\n                return (\r\n                  <td key={item._id + (col.path || col.key)}>\r\n                    {this.renderCell(item, col)}\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n//import { apiUrl } from \"../../src/config.json\";\r\n\r\nconst apiEndpoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nexport function register(users) {\r\n  return http.post(\"/users\", {\r\n    email: users.email,\r\n    password: users.password,\r\n    name: users.username,\r\n  });\r\n}\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, {\r\n    email,\r\n    password,\r\n  });\r\n  localStorage.setItem(\"token\", jwt);\r\n}\r\n\r\nexport async function logout() {\r\n  localStorage.removeItem(\"token\");\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const response = localStorage.getItem(\"token\");\r\n    return jwtDecode(response);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function loginWithJwt(jwt) {\r\n  localStorage.setItem(\"token\", jwt);\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n\r\nhttp.setJwt(getJwt());\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from \"./common/like\";\r\nimport TableHeader from \"./common/tableHeader\";\r\nimport TableBody from \"./common/tableBody\";\r\nimport * as authService from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  column = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}> {movie.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content: (movie) => {\r\n        if (authService.getCurrentUser()) {\r\n          return (\r\n            <button\r\n              onClick={() => this.props.onDelete(movie)}\r\n              className=\"btn btn-danger\">\r\n              Delete\r\n            </button>\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n      },\r\n    },\r\n  ];\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n    return (\r\n      <table className=\"table\">\r\n        <TableHeader\r\n          sortColumn={sortColumn}\r\n          onSort={onSort}\r\n          column={this.column}></TableHeader>\r\n\r\n        <TableBody data={movies} column={this.column}></TableBody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NewMovies extends Component {\r\n  render() {\r\n    const { user } = this.props;\r\n    console.log(user);\r\n\r\n    return (\r\n      <Link className=\"btn btn-primary\" to={`/movies/new`}>\r\n        New Movies\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewMovies;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SearchInput extends Component {\r\n  state = {};\r\n  render() {\r\n    const { onChange, value, name } = this.props;\r\n    return (\r\n      <form>\r\n        <label htmlFor=\"search\"></label>\r\n        <input\r\n          onChange={(e) => onChange(e.currentTarget)}\r\n          value={value}\r\n          name={name}\r\n          className=\"form-control col-md-6\"\r\n          type=\"search\"\r\n          id=\"search\"></input>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchInput;\r\n","import React, { Component } from \"react\";\r\nimport { getMovies, deleteMovie } from \".././services/movieService\";\r\n//import { getMovies, deleteMovie } from \".././services/fakeMovieService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport ListGroup from \"./listGroup\";\r\nimport * as movieService from \"../services/movieService\";\r\nimport { pagination } from \"./utils/pagination\";\r\nimport { getGenres } from \"../services/genreService\";\r\n//import { getGenres } from \"../services/fakeGenreService\";\r\nimport MoviesTable from \"../components/moviesTable\";\r\nimport _ from \"lodash\";\r\nimport NewMovies from \"./newmovie\";\r\nimport SearchInput from \"./common/search\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    getGenres: [],\r\n    selectedGenre: \"\",\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    search: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data: genre } = await getGenres();\r\n    const genres = [{ name: \"All Genres\", _id: \"\" }, ...genre];\r\n    const { data: movies } = await getMovies();\r\n\r\n    this.setState({ movies, getGenres: genres });\r\n    // const genre = getGenres();\r\n    // const genres = [{ name: \"All Genres\", _id: \"\" }, ...genre];\r\n    // this.setState({ movies: getMovies(), getGenres: genres });\r\n  }\r\n\r\n  onDelete = async (movie) => {\r\n    const originalMovie = this.state.movies;\r\n    const result = originalMovie.filter((item) => {\r\n      return movie._id !== item._id;\r\n    });\r\n    this.setState({ movies: result });\r\n    try {\r\n      const { data: response } = await movieService.deleteMovie(movie);\r\n      console.log(response);\r\n      //await deleteMovie(movie);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"expected error\");\r\n      this.setState({ movies: originalMovie });\r\n    }\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    console.log(movies);\r\n    this.setState({ movies: movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (g) => {\r\n    this.setState({ selectedGenre: g, currentPage: 1, search: \"\" });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn: sortColumn });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e;\r\n\r\n    this.setState({ search: value, selectedGenre: \"\", currentPage: 1 });\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.state.movies);\r\n    const { length: count } = this.state.movies;\r\n    const {\r\n      currentPage,\r\n      pageSize,\r\n      movies: allMovies,\r\n      getGenres,\r\n      selectedGenre,\r\n      sortColumn,\r\n      search,\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (search) {\r\n      filtered = allMovies.filter((m) => {\r\n        return m.title.toLowerCase().startsWith(search.toLowerCase());\r\n      });\r\n    } else if (selectedGenre && selectedGenre._id) {\r\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n    }\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = pagination(sorted, currentPage, pageSize);\r\n    const { user } = this.props;\r\n    console.log(user);\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-2\">\r\n          <ListGroup\r\n            onItemSelect={this.handleGenreSelect}\r\n            selectedGenre={selectedGenre}\r\n            items={getGenres}></ListGroup>\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <div>\r\n              <NewMovies></NewMovies>\r\n            </div>\r\n          )}\r\n\r\n          <SearchInput\r\n            onChange={this.handleChange}\r\n            value={this.state.search}\r\n            name=\"search\"></SearchInput>\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            //onDelete={this.onDelete}\r\n            onSort={this.handleSort}></MoviesTable>\r\n          <Pagination\r\n            item={count}\r\n            itemCount={filtered.length}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}></Pagination>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport function pagination(item, currentPage, pageSize) {\r\n  const startIndex = (currentPage - 1) * pageSize;\r\n  //   const a = _.slice(item, startIndex);\r\n  //   const b = _.take(a, pageSize);\r\n  //return b;\r\n  return _(item).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Customers extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>Customers</h1>;\r\n  }\r\n}\r\n\r\nexport default Customers;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Rental extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h3>Rental</h3>;\r\n  }\r\n}\r\n\r\nexport default Rental;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return <h3>Form map</h3>;\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Notfound extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h3>Page Not found</h3>;\r\n  }\r\n}\r\n\r\nexport default Notfound;\r\n","import React, { Component } from \"react\";\r\nimport * as authService from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    authService.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport Logout from \"./logout\";\r\n//import Customers from \"./customers\";\r\n\r\nclass Navbar extends Component {\r\n  state = {};\r\n  render() {\r\n    const { user } = this.props;\r\n    console.log(user);\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <NavLink className=\"navbar-brand\" to=\"/\">\r\n          Vidly\r\n        </NavLink>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <NavLink className=\"nav-link\" to=\"/movies\">\r\n                Movies <span className=\"sr-only\">(current)</span>\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/customers\">\r\n                Customers\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/rentals\">\r\n                Rental\r\n              </NavLink>\r\n            </li>\r\n            {!user && (\r\n              <React.Fragment>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/loginForm\">\r\n                    Login\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/register\">\r\n                    Register\r\n                  </NavLink>\r\n                </li>\r\n              </React.Fragment>\r\n            )}\r\n            {user && (\r\n              <React.Fragment>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/\">\r\n                    {user.name}\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/logout\">\r\n                    Logout\r\n                  </NavLink>\r\n                </li>\r\n              </React.Fragment>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Input extends Component {\r\n  render() {\r\n    const { name, value, label, onChange, error } = this.props;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n          label={label}\r\n          onChange={onChange}\r\n          name={name}\r\n          value={value}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id={name}\r\n          aria-describedby=\"emailHelp\"></input>\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Select extends Component {\r\n  render() {\r\n    const { name, label, options, error, ...rest } = this.props;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <select name={name} id={name} {...rest} className=\"form-control\">\r\n          <option value=\"\"></option>\r\n          {options.map((option) => {\r\n            return (\r\n              <option key={option._id} value={option._id}>\r\n                {option.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Forms extends Component {\r\n  state = {\r\n    data: {},\r\n    error: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const { data } = this.state;\r\n    const error = {};\r\n\r\n    const result = Joi.validate(data, this.schema, {\r\n      abortEarly: false,\r\n    });\r\n    //console.log(result);\r\n    if (!result.error) {\r\n      return null;\r\n    } else {\r\n      for (let key of result.error.details) {\r\n        //console.log(key);\r\n        error[key.path[0]] = key.message;\r\n      }\r\n    }\r\n    // console.log(error);\r\n\r\n    return error;\r\n  };\r\n\r\n  validateProperty = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const result = Joi.validate(obj, schema);\r\n    var response = \"\";\r\n    if (!result.error) {\r\n      response = null;\r\n    } else {\r\n      for (let key of result.error.details) {\r\n        response = key.message;\r\n      }\r\n    }\r\n    return response;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const error = this.validate();\r\n    this.setState({ error: error || {} });\r\n\r\n    //call server\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    const data = { ...this.state.data };\r\n    const error = { ...this.state.error };\r\n    data[name] = value;\r\n    this.setState({ data: data });\r\n\r\n    const errorMessage = this.validateProperty(e);\r\n\r\n    if (!errorMessage) {\r\n      error[name] = null;\r\n    } else {\r\n      error[name] = errorMessage;\r\n    }\r\n\r\n    this.setState({ data: data, error: error });\r\n  };\r\n\r\n  renderButton = (label) => {\r\n    return (\r\n      <button\r\n        disabled={this.validate()}\r\n        type=\"submit\"\r\n        className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderSelect = (name, label, options) => {\r\n    const { data, error } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={error[name]}></Select>\r\n    );\r\n  };\r\n\r\n  renderInput = (name, label) => {\r\n    const { data, error } = this.state;\r\n    return (\r\n      <Input\r\n        className=\"form-control\"\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={error[name]}></Input>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Forms;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Forms from \"./common/form\";\r\nimport { isNull } from \"lodash\";\r\nimport * as authService from \"../services/authService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass LoginForm extends Forms {\r\n  state = {\r\n    data: { email: \"\", password: \"\" },\r\n    error: {},\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string().email().required(),\r\n    password: Joi.string().min(5).required(),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n    try {\r\n      await authService.login(data.email, data.password);\r\n      // window.location = \"/\";\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const error = { ...this.state.error };\r\n        error.email = ex.response.data;\r\n        this.setState({ error });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (authService.getCurrentUser()) return <Redirect to=\"/\"></Redirect>;\r\n    const { error, data } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              className=\"form-control col-4\"\r\n              value={data.email}\r\n              onChange={this.handleChange}\r\n              name=\"email\"\r\n              id=\"email\"\r\n              type=\"text\"></input>\r\n            {error.email && (\r\n              <div className=\"alert alert-danger col-4\">{error.email}</div>\r\n            )}\r\n            <label value={this.state.data.password} htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              className=\"form-control col-4\"\r\n              value={data.password}\r\n              onChange={this.handleChange}\r\n              name=\"password\"\r\n              id=\"password\"\r\n              type=\"password\"></input>\r\n            {error.password && (\r\n              <div className=\"alert alert-danger col-4\">{error.password}</div>\r\n            )}\r\n          </div>\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Forms from \"./common/form\";\r\nimport Input from \"../components/common/input\";\r\nimport { getMovies, getMovie, saveMovie } from \".././services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\n//import { getGenres } from \"../../src/services/fakeGenreService\";\r\n//import { getMovies, getMovie } from \"../../src/services/fakeMovieService\";\r\n//import { getMovie, saveMovie } from \"../../src/services/fakeMovieService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass MoviesForm extends Forms {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n      genreId: \"\",\r\n    },\r\n    error: {},\r\n    genres: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data: genres } = await getGenres();\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ genres: genres });\r\n    const movieId = this.props.match.params.id;\r\n    if (movieId === \"new\") return;\r\n    const { data: movie } = await getMovie(movieId);\r\n    console.log(movie);\r\n    if (!movieId) return this.props.history.replace(\"/notfound\");\r\n    // if (movieId === \"new\") {\r\n    //   return movieId;\r\n    // } else if (movieId !== \"new\") {\r\n    //   var movie = movies.find((m) => {\r\n    //     return m._id === movieId;\r\n    //   });\r\n    // } else {\r\n    //   this.props.history.replace(\"/notfound\");\r\n    // }\r\n    this.setState({ data: this.mapToViewModel(movie) });\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .integer()\r\n      .min(1)\r\n      .max(100)\r\n      .required()\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .integer()\r\n      .min(1)\r\n      .max(10)\r\n      .required()\r\n      .label(\"Daily Rental Rate\"),\r\n  };\r\n\r\n  validate = () => {\r\n    const { data, error } = this.state;\r\n    const errors = { ...error };\r\n    const result = Joi.validate(data, this.schema, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (!result.error) {\r\n      return null;\r\n    } else {\r\n      for (let key of result.error.details) {\r\n        errors[key.path[0]] = key.message;\r\n      }\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const result = Joi.validate(obj, schema);\r\n    return result;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const error = this.validate();\r\n    this.setState({ error: error || {} });\r\n\r\n    //add to server\r\n    this.doSubmit();\r\n  };\r\n\r\n  async doSubmit() {\r\n    try {\r\n      await saveMovie(this.state.data);\r\n      this.props.history.push(\"/movies\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"expected error\");\r\n    }\r\n  }\r\n\r\n  solo(item) {\r\n    const movies = getMovies();\r\n    const genres = getGenres();\r\n    let movieDb = movies.find((m) => {\r\n      return m._id === item._id || {};\r\n    });\r\n    console.log(movieDb);\r\n\r\n    movieDb.title = item.title;\r\n    movieDb.genre = genres.find((g) => {\r\n      return g._id === item.genreId;\r\n    });\r\n    movieDb.numberInStock = item.numberInStock;\r\n    movieDb.dailyRentalRate = item.dailyRentalRate;\r\n\r\n    // if (!movieDb._id) {\r\n    //   movieDb._id = Date.now();\r\n    //   movies.push(movieDb);\r\n    // }\r\n    return movieDb;\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    const data = { ...this.state.data };\r\n    const error = { ...this.state.error };\r\n    //const error = {};\r\n    data[name] = value;\r\n    this.setState({ data: data });\r\n\r\n    const errorMessage = this.validateProperty(e);\r\n    //console.log(errorMessage);\r\n    if (!errorMessage.error) {\r\n      return null;\r\n    } else {\r\n      for (let key of errorMessage.error.details) {\r\n        error[key.path[0]] = key.message;\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    this.setState({ data: data, error: error });\r\n  };\r\n\r\n  render() {\r\n    const { data, error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            name=\"title\"\r\n            value={this.state.data.title}\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            aria-describedby=\"emailHelp\"></input>\r\n          {error.title && (\r\n            <div className=\"alert alert-danger\">{error.title}</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label name=\"genreId\" htmlFor=\"genreId\">\r\n            Genre\r\n          </label>\r\n          <select\r\n            name=\"genreId\"\r\n            value={this.state.data.genreId}\r\n            onChange={this.handleChange}\r\n            className=\"custom-select\"\r\n            id=\"genreId\">\r\n            <option value=\"\"></option>\r\n            {this.state.genres.map((option) => {\r\n              return (\r\n                <option key={option._id} value={option._id}>\r\n                  {option.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          {error.genreId && (\r\n            <div className=\"alert alert-danger\">{error.genreId}</div>\r\n          )}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"numberInStock\">Number in Stock</label>\r\n          <input\r\n            name=\"numberInStock\"\r\n            value={this.state.data.numberInStock}\r\n            onChange={this.handleChange}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"numberInStock\"></input>\r\n          {error.numberInStock && (\r\n            <div className=\"alert alert-danger\">{error.numberInStock}</div>\r\n          )}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"rate\">Rate</label>\r\n          <input\r\n            name=\"dailyRentalRate\"\r\n            value={this.state.data.dailyRentalRate}\r\n            onChange={this.handleChange}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"rate\"\r\n            aria-describedby=\"emailHelp\"></input>\r\n          {error.dailyRentalRate && (\r\n            <div className=\"alert alert-danger\">{error.dailyRentalRate}</div>\r\n          )}\r\n        </div>\r\n        <button\r\n          // disabled={this.validate()}\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesForm;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\n//import * as userService from \"../services/userService\";\r\nimport * as authService from \"../services/authService\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    data: { email: \"\", password: \"\", username: \"\" },\r\n    error: {},\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string().email().required(),\r\n    password: Joi.string().min(5).required(),\r\n    username: Joi.string().required(),\r\n  };\r\n\r\n  validate = () => {\r\n    const { data } = this.state;\r\n    const error = {};\r\n    const result = Joi.validate(data, this.schema, { abortEarly: false });\r\n    if (!result.error) {\r\n      return null;\r\n    } else {\r\n      for (let key of result.error.details) {\r\n        //console.log(key);\r\n        if (data[key.path[0]] === \"\") error[key.path[0]] += key.message;\r\n      }\r\n    }\r\n    return error;\r\n  };\r\n\r\n  validateProperty = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    var errors = {};\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    errors = Joi.validate(obj, schema);\r\n    //console.log(errors);\r\n    if (!errors.error) {\r\n      return null;\r\n    } else {\r\n      return errors.error.details[0].message;\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    const data = { ...this.state.data };\r\n    data[name] = value;\r\n    const errors = {};\r\n    const errorMessage = this.validateProperty(e);\r\n    if (errorMessage) {\r\n      errors[name] = errorMessage;\r\n    } else {\r\n      delete errors[name];\r\n    }\r\n    //console.log(errors);\r\n\r\n    this.setState({ data: data, error: errors });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const error = this.validate(e);\r\n    this.setState({ error: error || {} });\r\n    //call the server\r\n    this.onSubmit();\r\n  };\r\n\r\n  onSubmit = async () => {\r\n    try {\r\n      const response = await authService.register(this.state.data);\r\n      //localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n      authService.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.error };\r\n        errors.email = ex.response.data;\r\n        this.setState({ error: errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { data, error } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">User Name</label>\r\n            <input\r\n              onChange={this.handleChange}\r\n              value={this.state.data.email}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"></input>\r\n            {error.email && (\r\n              <div className=\"alert alert-danger col-4\">{error.email}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n            <input\r\n              onChange={this.handleChange}\r\n              value={this.state.data.password}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"exampleInputPassword1\"></input>\r\n            {error.password && (\r\n              <div className=\"alert alert-danger col-4\">{error.password}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Name</label>\r\n            <input\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              value={this.state.data.username}\r\n              name=\"username\"\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"></input>\r\n            {error.username && (\r\n              <div className=\"alert alert-danger col-4\">{error.username}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group form-check\"></div>\r\n          <button\r\n            disabled={this.validate()}\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\">\r\n            Login\r\n          </button>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rental from \"./components/rentals\";\nimport Header from \"./components/common/header\";\nimport Notfound from \"./components/notfound\";\nimport Navbar from \"./components/navBar\";\nimport LoginForm from \"./components/loginForm\";\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport * as authService from \"./services/authService\";\n//import MovieForm from \"./components/movieform\";\nimport MoviesForm from \"./components/movieforms\";\nimport Register from \"./components/register\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n//import MoviesTable from \"./components/moviesTable\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = authService.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <div>\n        <ToastContainer></ToastContainer>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <Navbar user={this.state.user}></Navbar>\n        </nav>\n        <main className=\"container\">\n          <Switch>\n            <Route\n              path=\"/movies/:id\"\n              render={(props) => {\n                if (!authService.getCurrentUser()) {\n                  return (\n                    <Redirect\n                      to={{\n                        pathname: \"/loginForm\",\n                        state: { from: props.location },\n                      }}></Redirect>\n                  );\n                } else {\n                  return <MoviesForm {...props}></MoviesForm>;\n                }\n              }}></Route>\n            {/* <ProtectedRoute\n              path=\"/movies/:id\"\n              component={MoviesForm}></ProtectedRoute> */}\n            <Route\n              path=\"/movies\"\n              render={(props) => (\n                <Movies user={this.state.user} {...props}></Movies>\n              )}></Route>\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rental}></Route>\n            <Route path=\"/header\" component={Header}></Route>\n            <Route path=\"/notFound\" component={Notfound}></Route>\n            <Route path=\"/loginForm\" component={LoginForm}></Route>\n            <Route path=\"/logout\" component={Logout}></Route>\n            <Route path=\"/register\" component={Register}></Route>\n            <Redirect from=\"/\" exact to=\"/movies\"></Redirect>\n            <Redirect to=\"/notfound\"></Redirect>\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport logger from \"./services/logService\";\n\nconsole.log(\"SUPERMAN\", process.env.REACT_APP_API_URL);\n\nlogger.init();\n\nReactDOM.render(\n  <BrowserRouter>\n    <App></App>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}